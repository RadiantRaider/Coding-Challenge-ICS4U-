***Note: Computer science concept was noted as the camera, however doing the map function would also be a good idea.***

// Declaring variables
let x = 0.01;
let y = 0;
let z = 0;

let a = 10;
let b = 28;
let c = 8.0 / 3.0;

// Creating an array of points that will be used to create the curve (This in turn creates the starting point) -
let points = new Array();

// Creating the background that will be drawn on
function setup() {
	createCanvas(800, 600, WEBGL);
	colorMode(HSB);
}

function draw() {
	background(0);
  
------------------------------------------- This is the math concept -------------------------------------------------------------------
	let dt = 0.01;
	let dx = (a * (y - x)) * dt;
	let dy = (x * (b - z) - y) * dt;
	let dz = (x * y - c * z) * dt;
	x = x + dx;
	y = y + dy;
	z = z + dz;
 --------------------------------------------------------------------------------------------------------------------------------------
	
  points.push(new p5.Vector(x, y, z));

  ------------------------------------------- This is the computer science concept -----------------------------------------------------
	// Makes the mouse able to be used as a camera
  translate(0, 0, -80);
	let camX = map(mouseX, 0, width, -200, 200);
	let camY = map(mouseY, 0, height, -200,200); 
	camera(camX, camY, (height/2.0) / tan(PI*30.0 / 180.0), 0, 0, 0, 0, 1, 0);
  --------------------------------------------------------------------------------------------------------------------------------------

	scale(5); // Increases the size of the curve
	stroke(255);
	noFill(); // Removes the line that shows the curve being drawn

	let hu = 0;
	beginShape();


	for (let v of points) {
		stroke(hu, 255, 255);
		vertex(v.x, v.y, v.z);

		hu += 1;
		if (hu > 255) {
			hu = 0;
		}
	}
	endShape();
}
